$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 D clk $end
  $var wire 1 E rst $end
  $var wire 1 F wEnable $end
  $var wire 1 G rEnable1 $end
  $var wire 1 H rEnable2 $end
  $var wire 5 I wAddr [4:0] $end
  $var wire 32 J wData [31:0] $end
  $var wire 5 K rAddr1 [4:0] $end
  $var wire 5 L rAddr2 [4:0] $end
  $var wire 32 M rData1 [31:0] $end
  $var wire 32 N rData2 [31:0] $end
  $scope module smolRF $end
   $var wire 1 D clk $end
   $var wire 1 E rst $end
   $var wire 1 F wEnable $end
   $var wire 1 G rEnable1 $end
   $var wire 1 H rEnable2 $end
   $var wire 5 I wAddr [4:0] $end
   $var wire 32 J wData [31:0] $end
   $var wire 5 K rAddr1 [4:0] $end
   $var wire 5 L rAddr2 [4:0] $end
   $var wire 32 M rData1 [31:0] $end
   $var wire 32 N rData2 [31:0] $end
   $var wire 32 # registerFile[0] [31:0] $end
   $var wire 32 $ registerFile[1] [31:0] $end
   $var wire 32 % registerFile[2] [31:0] $end
   $var wire 32 & registerFile[3] [31:0] $end
   $var wire 32 ' registerFile[4] [31:0] $end
   $var wire 32 ( registerFile[5] [31:0] $end
   $var wire 32 ) registerFile[6] [31:0] $end
   $var wire 32 * registerFile[7] [31:0] $end
   $var wire 32 + registerFile[8] [31:0] $end
   $var wire 32 , registerFile[9] [31:0] $end
   $var wire 32 - registerFile[10] [31:0] $end
   $var wire 32 . registerFile[11] [31:0] $end
   $var wire 32 / registerFile[12] [31:0] $end
   $var wire 32 0 registerFile[13] [31:0] $end
   $var wire 32 1 registerFile[14] [31:0] $end
   $var wire 32 2 registerFile[15] [31:0] $end
   $var wire 32 3 registerFile[16] [31:0] $end
   $var wire 32 4 registerFile[17] [31:0] $end
   $var wire 32 5 registerFile[18] [31:0] $end
   $var wire 32 6 registerFile[19] [31:0] $end
   $var wire 32 7 registerFile[20] [31:0] $end
   $var wire 32 8 registerFile[21] [31:0] $end
   $var wire 32 9 registerFile[22] [31:0] $end
   $var wire 32 : registerFile[23] [31:0] $end
   $var wire 32 ; registerFile[24] [31:0] $end
   $var wire 32 < registerFile[25] [31:0] $end
   $var wire 32 = registerFile[26] [31:0] $end
   $var wire 32 > registerFile[27] [31:0] $end
   $var wire 32 ? registerFile[28] [31:0] $end
   $var wire 32 @ registerFile[29] [31:0] $end
   $var wire 32 A registerFile[30] [31:0] $end
   $var wire 32 B registerFile[31] [31:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 C i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
1D
1E
0F
0G
0H
b00000 I
b00000000000000000000000000000000 J
b00000 K
b00000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
#1
0D
0E
#2
b00000000000000000000000000000011 %
1D
1F
b00010 I
b00000000000000000000000000000011 J
#3
0D
b00000 I
#4
b00000000000000000000000000001000 (
1D
b00101 I
b00000000000000000000000000001000 J
#5
0D
#6
1D
0F
1G
b00010 K
b00000000000000000000000000000011 M
#7
0D
#8
1D
1H
b00101 L
b00000000000000000000000000001000 N
#9
0D
#10
1D
#11
0D
0G
0H
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
#12
b00000000000000000000000000000000 %
b00000000000000000000000000000000 (
b00000000000000000000000000100000 C
1D
1E
#13
0D
0E
#14
1D
#15
0D
#16
1D
#17
0D
#18
1D
#19
0D
